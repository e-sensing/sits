% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_FCN.R
\name{sits_FCN}
\alias{sits_FCN}
\title{Train a model using the a full Convolutional Neural Network}
\usage{
sits_FCN(
  samples = NULL,
  layers = c(128, 256, 128),
  kernels = c(9, 7, 5),
  activation = "relu",
  L2_rate = 1e-06,
  optimizer = keras::optimizer_adam(lr = 0.001),
  epochs = 150,
  batch_size = 128,
  validation_split = 0.2,
  verbose = 1
)
}
\arguments{
\item{samples}{Time series with the training samples.}

\item{layers}{Vector with size of the 1D convolutional filters
for each layer.}

\item{kernels}{Vector with size of the 1D convolutional kernels.}

\item{activation}{Activation function for 1D convolution.
Valid values: {'relu', 'elu', 'selu', 'sigmoid'}.}

\item{L2_rate}{Regularization rate for 1D convolution.}

\item{optimizer}{Function with a pointer to the optimizer function
(default is optimization_adam()).
Options: optimizer_adadelta(), optimizer_adagrad(),
optimizer_adam(), optimizer_adamax(),
optimizer_nadam(), optimizer_rmsprop(),
optimizer_sgd().}

\item{epochs}{Number of iterations to train the model.}

\item{batch_size}{Number of samples per gradient update.}

\item{validation_split}{Number between 0 and 1. Fraction of training data
to be used as validation data.
The model will set apart this fraction of the
training data, will not train on it,
and will evaluate the loss and any model metrics
on this data at the end of each epoch.
The validation data is selected from the last
samples in the x and y data provided,
before shuffling.}

\item{verbose}{Verbosity mode (0 = silent, 1 = progress bar,
2 = one line per epoch).}
}
\value{
A model fitted to input data to be passed
        to \code{\link[sits]{sits_classify}}
}
\description{
Use the a full 1D CNN algorithm to classify data.
Users can define the number of convolutional layers,
the size of the convolutional kernels, and the activation functions.

The FCN has been proposed for time series classification by  Wang et al.
The SITS implementation of FCN is based on the work of Hassan Fawaz and
collaborators. Fawaz provides a reference Keras implementation of FCN
in https://github.com/hfawaz/dl-4-tsc.
If you use this function, please cite the references.
}
\examples{
\donttest{
# Retrieve the set of samples for the Mato Grosso region

# Build a machine learning model based on deep learning
cnn_model <- sits_train (samples_mt_4bands, sits_FCN())
# Plot the model
plot(cnn_model)

# get a point and classify the point with the ml_model
point.tb <- sits_select_bands(point_mt_6bands, ndvi, evi, nir, mir)
class.tb <- sits_classify(point.tb, cnn_model)
plot(class.tb, bands = c("ndvi", "evi"))
}
}
\references{
Hassan Fawaz, Germain Forestier, Jonathan Weber,
Lhassane Idoumghar,  and Pierre-Alain Muller,
"Deep learning for time series classification: a review",
Data Mining and Knowledge Discovery, 33(4): 917--963, 2019.

Zhiguang Wang, Weizhong Yan, and Tim Oates,
"Time series classification from scratch with deep neural networks:
A strong baseline",
2017 international joint conference on neural networks (IJCNN).
}
\author{
Gilberto Camara, \email{gilberto.camara@inpe.br}

Alexandre Ywata de Carvalho, \email{alexandre.ywata@ipea.gov.br}

Rolf Simoes, \email{rolf.simoes@inpe.br}
}
