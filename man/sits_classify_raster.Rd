% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_raster_classification.R
\name{sits_classify_raster}
\alias{sits_classify_raster}
\title{Classify a set of spatio-temporal raster bricks using multicore machines}
\usage{
sits_classify_raster(file = NULL, coverage = NULL, ml_model = NULL,
  interval = "12 month", filter = NULL, memsize = 4, multicores = NULL)
}
\arguments{
\item{file}{Vector of file names to store the output (one file per classified year).}

\item{coverage}{Tibble with information about a coverage of space-time raster bricks.}

\item{ml_model}{An R model trained by \code{\link[sits]{sits_train}}.}

\item{interval}{Interval between two sucessive classifications, expressed in months.}

\item{filter}{Smoothing filter to be applied (if desired).}

\item{memsize}{Memory available for classification (in GB).}

\item{multicores}{Number of cores to be used for classification.}
}
\value{
A tibble with the metadata for the vector of classified RasterLayers.
}
\description{
Takes a set of spatio-temporal raster bricks, whose metadata is
             described by tibble (created by \code{\link[sits]{sits_coverage}}),
             a set of samples used for training a classification model,
             a prediction model (created by \code{\link[sits]{sits_train}}),
             and produces a classified set of RasterLayers. This function is similar to
              \code{\link[sits]{sits_classify}} which is applied to time series stored in a sits tibble.
              There are two parameters for optimizing processing of large data sets. These
              parameters are "memsize" and "multicores". The "multicores" parameter defines the
              number of cores used for processing. The "memsize" parameter  controls
              the amount of memory available for classification.
}
\examples{
\donttest{
# Retrieve the set of samples for the Mato Grosso region (provided by EMBRAPA)
data(samples_MT_ndvi)

# Build a machine learning model based on the samples
svm_model <- sits_train(samples_MT_ndvi, sits_svm())

# read a raster file and put it into a vector
files  <- c(system.file ("extdata/raster/mod13q1/sinop-crop-ndvi.tif", package = "sits"))

# define the timeline
data(timeline_modis_392)

# create a raster metadata file based on the information about the files
#' # create a raster coverage file based on the information about the files
raster.tb <- sits_coverage(service = "RASTER", name  = "Sinop-crop",
             timeline = timeline_modis_392, bands = c("ndvi"), files = files)
# classify the raster file
raster_class.tb <- sits_classify_raster (file = "./raster-class", raster.tb,
   ml_model = svm_model, memsize = 4, multicores = 2)
# plot the resulting classification
sits_plot_raster(raster_class.tb[1,], title = "SINOP class 2000-2001")
}
}
\author{
Gilberto Camara, \email{gilberto.camara@inpe.br}
}
