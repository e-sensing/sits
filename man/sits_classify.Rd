% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_classification.R
\name{sits_classify}
\alias{sits_classify}
\title{Classify a sits tibble using machine learning models}
\usage{
sits_classify(data.tb = NULL, ml_model = NULL, interval = "12 month",
  multicores = 1)
}
\arguments{
\item{data.tb}{Tibble with time series metadata and data.}

\item{ml_model}{Pre-built machine learning model (see \code{\link[sits]{sits_train}}).}

\item{interval}{Interval used for classification (in months).}

\item{multicores}{Number of threads to process the time series.}
}
\value{
A tibble with the predicted labels for each input segment.
}
\description{
This function classifies a set of time series, given
a set of training samples, an inference model, and an interval.
To perform the classification, users should provide a set of
labelled samples. Each samples should be associated to one spatial location
(latitude/longitude), one time interval and a label.

After defining the training samples, the users need to provide a machine learning model.
Currenly, sits supports the following models:
'svm' (see \code{\link[sits]{sits_svm}}), 'random forest' (see \code{\link[sits]{sits_rfor}}),
'boosting' (see \code{\link[sits]{sits_gbm}}), 'lda' (see \code{\link[sits]{sits_lda}}),
'qda' (see \code{\link[sits]{sits_qda}}), multinomial logit' (see \code{\link[sits]{sits_mlr}}),
'lasso' (see \code{\link[sits]{sits_mlr}}), and 'ridge' (see \code{\link[sits]{sits_mlr}}).

The model should be precomputed by the user. This model should be
passed to the function using the parameter "ml_model".
}
\examples{
\donttest{
# Retrieve the set of samples for the Mato Grosso region (provided by EMBRAPA)
data(samples_MT_ndvi)
# select the bands "ndvi", "evi", "nir", and "mir"
samples.tb <- sits_select(samples_MT_9classes, bands = c("ndvi","evi","nir","mir"))
# build a classification model using SVM
model_svm <- sits_train(samples.tb, ml_method = sits_svm())
# Retrieve a time series and select the bands "ndvi", "evi", "nir", and "mir"
point.tb <- sits_select(point_MT_6bands, bands = c("ndvi","evi","nir","mir"))
# classify the point
class.tb <- sits_classify(point.tb, ml_model = model_svm)
# plot the classification
sits_plot(class.tb)
}
}
\author{
Gilberto Camara, \email{gilberto.camara@inpe.br}
}
