% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_ResNet.R
\name{sits_ResNet}
\alias{sits_ResNet}
\title{Train a model using the ResNet model}
\usage{
sits_ResNet(
  data = NULL,
  blocks = c(64, 128, 128),
  kernels = c(8, 5, 3),
  activation = "relu",
  optimizer = keras::optimizer_adam(lr = 0.001),
  epochs = 150,
  batch_size = 128,
  validation_split = 0.2,
  verbose = 1
)
}
\arguments{
\item{data}{Time series with the training samples.}

\item{blocks}{Number of 1D convolutional filters for
each block of three layers.}

\item{kernels}{Size of the 1D convolutional kernels
for each layer of each block.}

\item{activation}{Activation function for 1D convolution.
Valid values: {'relu', 'elu', 'selu', 'sigmoid'}.}

\item{optimizer}{Function with a pointer to the optimizer function
(default is optimization_adam()).
Options: optimizer_adadelta(), optimizer_adagrad(),
optimizer_adam(), optimizer_adamax(),
optimizer_nadam(), optimizer_rmsprop(),
optimizer_sgd().}

\item{epochs}{Number of iterations to train the model.}

\item{batch_size}{Number of samples per gradient update.}

\item{validation_split}{Number between 0 and 1. Fraction of training data
to be used as validation data.
The model will set apart this fraction of the
training data, will not train on it,
and will evaluate the loss and any model metrics
on this data at the end of each epoch.
The validation data is selected from the last
samples in the x and y data provided,
before shuffling.}

\item{verbose}{Verbosity mode (0 = silent, 1 = progress bar,
2 = one line per epoch).}
}
\value{
A fitted model to be passed to \code{\link[sits]{sits_classify}}
}
\description{
Use a ResNet architecture for classifiying image time series.
The ResNet (or deep residual network) was proposed by a team
in Microsoft Research for 2D image classification.
ResNet tries to address the degradation of accuracy
in a deep network. The idea is to replace a deep network
with a combination of shallow ones.
In the paper by Fawaz et al. (2019), ResNet was considered the best method
for time series classification, using the UCR dataset.
Please refer to the paper for more details.

The SITS implementation of RestNet is based on the work of Hassan Fawaz and
collaborators, and also inspired by the paper of Wang et al (see below).
Fawaz provides a reference code  in https://github.com/hfawaz/dl-4-tsc.
If you use this function, please cite the references.
}
\examples{
\donttest{
# Retrieve the set of samples for the Mato Grosso (provided by EMBRAPA)

# Build a machine learning model based on deep learning
rn_model <- sits_train (samples_mt_4bands, sits_ResNet(epochs = 75))
# Plot the model
plot(rn_model)

# get a point and classify the point with the ml_model
point.tb <- sits_select_bands(point_mt_6bands, ndvi, evi, nir, mir)
class.tb <- sits_classify(point.tb, rn_model)
plot(class.tb, bands = c("ndvi", "evi"))
}
}
\references{
Hassan Fawaz, Germain Forestier, Jonathan Weber,
Lhassane Idoumghar,  and Pierre-Alain Muller,
"Deep learning for time series classification: a review",
Data Mining and Knowledge Discovery, 33(4): 917--963, 2019.

Zhiguang Wang, Weizhong Yan, and Tim Oates,
"Time series classification from scratch with deep neural networks:
 A strong baseline",
 2017 international joint conference on neural networks (IJCNN).
}
\author{
Gilberto Camara, \email{gilberto.camara@inpe.br}

Alexandre Ywata de Carvalho, \email{alexandre.ywata@ipea.gov.br}

Rolf Simoes, \email{rolf.simoes@inpe.br}
}
