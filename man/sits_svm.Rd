% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_machine_learning.R
\name{sits_svm}
\alias{sits_svm}
\title{Train a sits classification model using a support vector machine}
\usage{
sits_svm(data.tb = NULL, formula = sits_formula_logref(), scale = FALSE,
  cachesize = 1000, kernel = "radial", degree = 3, coef0 = 0,
  cost = 10, tolerance = 0.001, epsilon = 0.1, cross = 0, ...)
}
\arguments{
\item{data.tb}{Time series with the training samples.}

\item{formula}{Symbolic description of the model to be fit. Package sits offers a set of such formulas (default: sits_svm).}

\item{scale}{Logical vector indicating the variables to be scaled.}

\item{cachesize}{Cache memory in MB (default = 1000).}

\item{kernel}{Kernel used in training and predicting (options = linear, polynomial, radial basis, sigmoid).}

\item{degree}{Exponential of polynomial type kernel.}

\item{coef0}{Parameter needed for kernels of type polynomial and sigmoid (default: 0).}

\item{cost}{Cost of constraints violation.}

\item{tolerance}{Tolerance of termination criterion (default: 0.001).}

\item{epsilon}{Epsilon in the insensitive-loss function (default: 0.1).}

\item{cross}{Number of cross validation folds applied on the training data to assess the quality of the model.}

\item{...}{Other parameters to be passed to e1071::svm function.}
}
\description{
This function receives a tibble with a set of attributes X for each observation Y
These attributes are distance metrics between patterns and observations, obtained by a distance
function in sits (see \code{\link[sits]{sits_distances}}).
The SVM algorithm is used for multiclass-classification.
For this purpose, it uses the "one-against-one" approach, in which k(k-1)/2 binary
classifiers are trained; the appropriate class is found by a voting scheme.
This function is a front-end to the "svm" method in the "e1071" package.
Please refer to the documentation in that package for more details.
}
\examples{
\donttest{
# Retrieve the set of samples for the Mato Grosso region (provided by EMBRAPA)
data(samples_MT_ndvi)
# Build an SVM model
svm_model <- sits_train(samples_MT_ndvi, sits_svm())
# get a point
data(point_ndvi)
# classify the point
class.tb <- sits_classify (point_ndvi, svm_model)
# plot the classification
sits_plot(class.tb)
}
}
\author{
Alexandre Xavier Ywata de Carvalho, \email{alexandre.ywata@ipea.gov.br}

Rolf Simoes, \email{rolf.simoes@inpe.br}

Gilberto Camara, \email{gilberto.camara@inpe.br}
}
