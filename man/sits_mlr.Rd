% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_machine_learning.R
\name{sits_mlr}
\alias{sits_mlr}
\title{Train a sits classification model using multinomial log-linear}
\usage{
sits_mlr(
  data = NULL,
  formula = sits_formula_linear(),
  n_weights = 20000,
  maxit = 2000,
  ...
)
}
\arguments{
\item{data}{Time series with the training samples.}

\item{formula}{Symbolic description of the model to be fit.
(default: sits_formula_logref).}

\item{n_weights}{Maximum number of weights
(should be proportional to size of input data).}

\item{maxit}{Maximum number of iterations (default 300).}

\item{...}{Other parameters to be passed to nnet::multinom.}
}
\value{
Model fitted to input data
                       (to be passed to \code{\link[sits]{sits_classify}})
}
\description{
Use multinomial log-linear (mlr) fitting model to classify data.
This function receives a tibble with a set of attributes X
for each observation Y. These attributes are the values of the time series
for each band.
This function is a front-end to the "multinom" method in the "nnet" package.
Please refer to the documentation in that package for more details.
}
\examples{
\donttest{
# Retrieve the set of samples for  Mato Grosso region (provided by EMBRAPA)
samples_2bands <- sits_select_bands(samples_mt_6bands, ndvi, evi)

# Build a machine learning model based on deep learning
ml_model <- sits_train (samples_2bands, sits_mlr())

# get a point and classify the point with the ml_model
point.tb <- sits_select_bands(point_mt_6bands, ndvi, evi)
class.tb <- sits_classify(point.tb, ml_model)
plot(class.tb, bands = c("ndvi", "evi"))
}
}
\author{
Alexandre Ywata de Carvalho, \email{alexandre.ywata@ipea.gov.br}

Rolf Simoes, \email{rolf.simoes@inpe.br}

Gilberto Camara, \email{gilberto.camara@inpe.br}
}
